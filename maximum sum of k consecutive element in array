def max_sum_k_consecutive(arr, K):
    n = len(arr)
    if n < K or K <= 0:
        return 0  # Handle edge cases

    # Calculate the sum of the first K elements
    current_sum = sum(arr[:K])
    max_sum = current_sum

    # Slide the window from the Kth element to the end of the array
    for i in range(K, n):
        current_sum += arr[i] - arr[i - K]
        max_sum = max(max_sum, current_sum)

    return max_sum

# Example usage
arr = [100, 200, 300, 400]
K = 2
result = max_sum_k_consecutive(arr, K)
print(result)  # Output: 700
